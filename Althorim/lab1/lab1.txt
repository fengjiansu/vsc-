lab1
任务1：编写BubbleSort.c和MergeSort.c，利用提供的数据集，分别记录不同大小数组的排序时间，并根据规模和时间画出两个算法的实际测量时间复杂度。
任务2：(计算机算法设计与分析，第五版) P41开始，算法实现题目
2-1 众数问题（要求用分治法，即递归的方法完成）
第一步：对集合（数组）中的元素进行排序
第二步：设计一个递归函数Mode，输入参数是排序过的一维数组以及数组的起点和终点，返回值是一维数组的众数
第三步：设计main函数，并测试
2-3 
2-4（选做）
2-5
2-9（书上的双色汉诺塔问题题干有点问题，按照下面的要求做这个题）

.表示红盘
-表示蓝盘
=表示底座
已知n（n是偶数）个盘子，例子中是6个，大小相同的盘子有两个，叠放在一起，但下面的盘子是红色，上面的盘子是蓝色。
要求：
1）每次只能移动一个盘子
2）大盘子不能放在小盘子上面
3）在移动的过程中不能出现两个大小相同的盘子叠在一起，且下面的盘子是蓝色而上面的盘子是红色的情况。
问题：把n个盘子从A盘移动到C盘的时间复杂度是多少？编程实现盘子的移动操作。
 
       |                    |                        |	                                  |	                 |                      |         
       |	            |		             |	    			          |	                 |	    	        |	 
      --- 	            |		             |	    			          |	                 |	    	       --- 	 
      ...                   |		             |	    			          |	                 |	    	       ...        
       |                    |		             |	    			          |	                 |	    	        |         
       |                    |		             |	    			          |	                 |	    	        |         
     ------  	            |		             |	         ===>>		          |	                 |	    	      ------  	 
     ......  	            |		             |	    			          |	                 |	    	      ......  	 
       |     	            |		             |	    			          |	                 |	    	        |     	 
       |     	            |		             |	    			          |	                 |	    	        |     	 
   ----------               |		             |	    			          |	                 |	    	    ----------    
   ..........               |		             |	    			          |	                 |	    	    ..........    
       |                    |		             |	    			          |	                 |	    	        |         
================    ================	     ================			  ================       ================     	 ================ 

      A                     B                        C                                    A                       B                      C

